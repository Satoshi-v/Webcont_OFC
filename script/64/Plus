#!/bin/bash

# Instalación silenciosa de paquetes
sudo apt-get update -y
sudo apt-get install lolcat toilet curl git figlet boxes net-tools uuid-runtime python3 python3-pip jq -y

# Verificación si el usuario es root
cd $HOME
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;33m[\033[1;31mError\033[1;33m] \033[1;37m- \033[1;33mDEBES EJECUTAR LA INSTALACIÓN DEL SCRIPT COMO USUARIO ROOT\033[0m"
    rm -rf $HOME/Plus
    exit 1
fi

# Decodificación de enlaces
_lnk=$(echo "z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r" | sed -e "s/[^a-z.]//ig" | rev)
_Ink=$(echo "/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×" | sed -e "s/[^a-z/]//ig")
_1nk=$(echo "/3×u3#s×87r/83×l2×4×i0b×" | sed -e "s/[^a-z/]//ig")

# Descarga del archivo list
rm -f $_Ink/list
wget -P $_Ink https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Install/list -O $_Ink/list

# Crear enlace al menú
echo "/bin/menu" >/bin/h && chmod +x /bin/h
ln -s /bin/h /bin/menu

# Actualizar versión
rm versao* >/dev/null 2>&1
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Install/versao >/dev/null 2>&1

# Descargar módulos
cd /bin/
rm v2raymanager botteste.sh
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Modulos/v2raymanager
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Modulos/botteste.sh
chmod +x v2raymanager botteste.sh

# ShellBot
mkdir -p $HOME/BOT
cd $HOME/BOT
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Modulos/ShellBot.sh
chmod +x ShellBot.sh
cd

# Licencia
mkdir -p /etc/rec
cd /etc/rec
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Modulos/licence
chmod +x licence
cd

# Base de datos de usuarios
[[ -f "$HOME/usuarios.db" ]] && {
    tput reset
    echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
    echo -e "\033[0;34m┃                   \033[1;37m• \033[1;31m¡ATENCIÓN! \033[1;37m•                   \033[0;34m┃"
    echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
    echo -e "\033[0;34m┃\033[1;37mSE ENCONTRÓ UNA BASE DE DATOS DE USUARIO \033[1;32m(usuarios.db)\033[1;37m   \033[0;34m┃"
    echo -e "\033[0;34m┃\033[1;37m¿MANTENERLA O CREAR UNA NUEVA?                \033[0;34m┃"
    echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
    echo -e "\033[0;34m┃\033[1;37m[\033[1;31m1\033[1;37m] Mantener base actual                  \033[0;34m┃"
    echo -e "\033[0;34m┃\033[1;37m[\033[1;31m2\033[1;37m] Crear nueva base                            \033[0;34m┃"
    echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
    read -p "Opción (1 o 2): " -e -i 1 optiondb
} || {
    awk -F: '$3 >= 500 {print $1" 1"}' /etc/passwd | grep -v "^nobody" > $HOME/usuarios.db
}
[[ "$optiondb" == "2" ]] && awk -F: '$3 >= 500 {print $1" 1"}' /etc/passwd | grep -v "^nobody" > $HOME/usuarios.db

# Finalización
tput reset
echo ""
echo -e "        \033[1;33m • \033[1;94mINSTALACIÓN CONCLUIDA\033[1;33m • \033[0m"
echo ""

{
    echo "clear"
    echo 'DATE=$(date +"%d-%m-%y")'
    echo 'TIME=$(date +"%T")'
    echo 'figlet -k SSH-PLUS | lolcat'
    echo 'echo -e " SERVIDOR: $HOSTNAME"'
    echo 'echo -e " ENCENDIDO DESDE: $(uptime -p)"'
    echo 'echo -e " FECHA: $DATE | HORA: $TIME"'
    echo 'echo -e " (TELEGRAM) @TURBONET2023"'
    echo 'echo -e "\033[1;31m ESCRIBE ( menu ) PARA ENTRAR\033[0m."'
    echo 'echo -e ""'
} >> /root/.bashrc

figlet "SSH-PLUS" | lolcat
echo -e "\033[5;34;47m           ¡INSTALACIÓN CONCLUIDA!           \033[0m"
echo -e "\033[1;33mPARA INICIAR ESCRIBE: \033[1;32mmenu\033[0m"
echo -e "\033[1;33mMÁS INFO: \033[1;36m@TURBONET2023\033[0m"

# Preguntar reinicio
while true; do
    echo
    echo -e "\033[1;33m¿Reiniciar ahora? (s/n): \033[0m"
    read -n1 -r REPLY
    echo
    [[ $REPLY =~ ^[Ss]$ ]] && reboot && break
    [[ $REPLY =~ ^[Nn]$ ]] && break
    echo -e "\033[1;31mOpción inválida.\033[0m"
done

# Limpieza
rm -rf $HOME/Plus
history -c
