#!/bin/bash

# Instalación silenciosa de paquetes básicos
sudo apt-get update -y
sudo apt-get install -y lolcat toilet curl git figlet boxes net-tools uuid-runtime python3 python3-pip python3-dev python3-venv jq

# Verificación si el usuario es root
cd $HOME
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;33m[\033[1;31mError\033[1;33m] \033[1;37m- \033[1;33mDEBES EJECUTAR LA INSTALACIÓN DEL SCRIPT COMO USUARIO ROOT\033[0m"
    rm -rf $HOME/Plus
    exit 1
fi

# Decodificación de enlaces
_lnk=$(echo "z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r" | sed -e "s/[^a-z.]//ig" | rev)
_Ink=$(echo "/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×" | sed -e "s/[^a-z/]//ig")
_1nk=$(echo "/3×u3#s×87r/83×l2×4×i0b×" | sed -e "s/[^a-z/]//ig")

# Función barra de progreso
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y >/dev/null 2>&1
        ${comando[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "\033[1;31m   ❪\033[1;33mESPERA \033[5;37m>\033[5;37m>\033[5;37m>\033[5;37m> \033[1;93m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[1;92m■"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;93m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "\033[1;31m   ❪\033[1;33mESPERA \033[5;37m>\033[5;37m>\033[5;37m>\033[5;37m> \033[1;93m["
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}

# --- [✓] SIN CLAVE DE INSTALACIÓN ---
echo -e "\033[1;32m[✓] Modo sin clave activado. Continuando...\033[0m"

# Redefinir terminal
tput reset

# Mensaje de bienvenida
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\E[41;1;37m               ⇱ SCRIPT SSHPLUS PRO ⇲             \E[0m\033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"  
echo -e "\033[0;34m┃     \033[1;31m¡ATENCIÓN! \033[1;37mESTE SCRIPT VA A:                   \033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;32m• \033[1;37mINSTALAR UN CONJUNTO DE SCRIPTS COMO HERRAMIENTAS\033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m  PARA LA GESTIÓN DE RED, SISTEMA Y USUARIOS\033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;32m• \033[1;32m¡CONSEJO! \033[1;37mUSA EL TEMA OSCURO EN TU TERMINAL PARA \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m  UNA MEJOR EXPERIENCIA Y VISUALIZACIÓN DEL MISMO! \033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37m               by:@TURBONET2023                   \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"           
echo ""

# --- Descargar list directamente (sin clave) ---
echo -e "\033[1;36m[✓] Descargando archivos necesarios...\033[0m"
rm -f $_Ink/list >/dev/null 2>&1
wget -P $_Ink https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Install/list -O $_Ink/list >/dev/null 2>&1

if [[ ! -f "$_Ink/list" ]]; then
    echo -e "\033[1;31m[✘] Error: No se pudo descargar 'list'.\033[0m"
    exit 1
fi

sleep 2

# Crear enlace al menú
echo "/bin/menu" >/bin/h && chmod +x /bin/h

# Actualizar versión
rm -f versao*
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Install/versao >/dev/null 2>&1

# Descargar módulos
cd /bin/ >/dev/null 2>&1
rm -f v2raymanager botteste.sh
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Modulos/v2raymanager >/dev/null 2>&1
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Modulos/botteste.sh >/dev/null 2>&1
chmod +x v2raymanager botteste.sh

# ShellBot
mkdir -p $HOME/BOT
cd $HOME/BOT
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Modulos/ShellBot.sh >/dev/null 2>&1
chmod +x ShellBot.sh
cd

# Licencia
mkdir -p /etc/rec
cd /etc/rec
wget https://raw.githubusercontent.com/Satoshi-V/Webcont_OFC/main/Modulos/licence >/dev/null 2>&1
chmod +x licence
cd

# Base de datos de usuarios
[[ -f "$HOME/usuarios.db" ]] && {
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃                   \033[1;37m• \033[1;31m¡ATENCIÓN! \033[1;37m•                   \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37mSE ENCONTRÓ UNA BASE DE DATOS DE USUARIO \033[1;32m(usuarios.db)\033[0;34m┃" 
echo -e "\033[0;34m┃\033[1;37m¿MANTENERLA O CREAR UNA NUEVA?                \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37m[\033[1;31m1\033[1;37m] Mantener base actual                         \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m[\033[1;31m2\033[1;37m] Crear nueva base                            \033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
read -p "Opción (1 o 2): " -e -i 1 optiondb
} || {
awk -F: '$3 >= 500 {print $1" 1"}' /etc/passwd | grep -v "^nobody" > $HOME/usuarios.db
}
[[ "$optiondb" == "2" ]] && awk -F: '$3 >= 500 {print $1" 1"}' /etc/passwd | grep -v "^nobody" > $HOME/usuarios.db

# Redefinir terminal
tput reset

# Actualizar sistema
echo -e "\E[38;5;92m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;92m┃\E[44;1;37m            ESPERA LA INSTALACIÓN               \E[0m\E[38;5;92m┃"
echo -e "\E[38;5;92m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️\033[1;91m] \033[1;97mACTUALIZANDO SISTEMA \033[1;91m[\033[1;31m⚠️\033[1;91m]\033[0m"
echo ""
echo -e "  \033[1;93m¡LAS ACTUALIZACIONES PUEDEN TARDAR UN POCO!\033[0m"
echo ""

fun_attlist() {
    apt-get update -y
    mkdir -p /usr/share/.plus
    echo "crz: $(date)" > /usr/share/.plus/.plus
}
fun_bar "fun_attlist"

# Instalar Python 3.12 (predeterminado en Ubuntu 24.04)
tput reset
echo -e "\E[38;5;92m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;92m┃\E[44;1;37m            ESPERA LA INSTALACIÓN               \E[0m\E[38;5;92m┃"
echo -e "\E[38;5;92m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️\033[1;91m] \033[1;97mINSTALANDO PYTHON \033[1;91m[\033[1;31m⚠️\033[1;91m]\033[0m"
echo ""
echo -e "        \033[1;93m¡PUEDE TARDAR UN POCO!\033[0m"
echo ""

install_python3() {
    if ! command -v python3.12 &> /dev/null; then
        apt-get install -y python3.12 python3.12-dev python3.12-venv
    fi
    # Configurar python3 como python3.12
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1
    update-alternatives --set python3 /usr/bin/python3.12
    # Instalar pip si no existe
    python3 -m ensurepip --upgrade
    apt-get install -y socat
}
fun_bar "install_python3"

# Instalar paquetes
tput reset
echo -e "\E[38;5;92m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;92m┃\E[44;1;37m            ESPERA LA INSTALACIÓN               \E[0m\E[38;5;92m┃"
echo -e "\E[38;5;92m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️\033[1;91m] \033[1;97mINSTALANDO PAQUETES  \033[1;91m[\033[1;31m⚠️\033[1;91m]\033[0m"
echo ""
echo -e " \033[1;93m¡ALGUNOS PAQUETES SON NECESARIOS!\033[0m"
echo ""

inst_pct() {
    _pacotes=("bc" "screen" "nano" "unzip" "lsof" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "firewalld")
    for _prog in "${_pacotes[@]}"; do
        if ! dpkg -l | grep -q "^ii  $_prog "; then
            apt-get install -y $_prog
        fi
    done
    pip3 install speedtest-cli || echo -e "\e[1;31mError en speedtest-cli\e[0m"
    # Firewall
    if command -v firewall-cmd &> /dev/null; then
        firewall-cmd --permanent --add-port={80,81,443,2053,1194,8080,8989,5454,8888}/tcp
        firewall-cmd --permanent --add-port=7300/udp
        firewall-cmd --reload
    fi
}
fun_bar "inst_pct"

# UFW
if command -v ufw &> /dev/null; then
    ufw allow 80,443,8080,8799/tcp
fi

# --- ✅ RUSTYPROXY ELIMINADO ---
echo -e "\033[1;32m[✓] RustyProxy omitido (no compatible con Ubuntu 24.04)\033[0m"

# Herramientas de red
tput reset
echo -e "\E[38;5;18m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;18m┃\E[44;1;37m         INSTALANDO PAQUETES DE REDE          \E[0m\E[38;5;18m┃"
echo -e "\E[38;5;18m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
fun_bar "apt-get install -y lsof htop nload zip netcat"

# DNS (sin iptables -F para no perder conexión)
tput reset
echo -e "\033[1;36mCONFIGURANDO DNS\033[0m"
cat > /etc/resolv.conf << 'EOF'
nameserver 1.1.1.1
nameserver 8.8.8.8
nameserver 208.67.222.222
EOF

# Finalizar
tput reset
echo -e "\E[38;5;18m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;18m┃\E[44;1;37m         FINALIZANDO INSTALACIÓN          \E[0m\E[38;5;18m┃"
echo -e "\E[38;5;18m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "     \033[1;93m¡CONCLUYENDO FUNCIONES!\033[0m"
echo ""

fun_bar "$_Ink/list $_lnk $_Ink $_1nk"

# Mensaje final
tput reset
cd $HOME
{
    echo "clear"
    echo 'DATE=$(date +"%d-%m-%y")'
    echo 'TIME=$(date +"%T")'
    echo 'figlet -k SSH-PLUS | lolcat'
    echo 'echo -e " SERVIDOR: $HOSTNAME"'
    echo 'echo -e " ENCENDIDO DESDE: $(uptime -p)"'
    echo 'echo -e " FECHA: $DATE | HORA: $TIME"'
    echo 'echo -e " (TELEGRAM) @TURBONET2023"'
    echo 'echo -e "\033[1;31m ESCRIBE ( menu ) PARA ENTRAR\033[0m."'
    echo 'echo -e ""'
} >> /root/.bashrc

figlet "SSH-PLUS" | lolcat
echo -e "\033[5;34;47m           ¡INSTALACIÓN CONCLUIDA!           \033[0m"
echo -e "\033[1;33mPARA INICIAR ESCRIBE: \033[1;32mmenu\033[0m"
echo -e "\033[1;33mMÁS INFO: \033[1;36m@TURBONET2023\033[0m"

# Preguntar reinicio
while true; do
    echo
    echo -e "\033[1;33m¿Reiniciar ahora? (s/n): \033[0m"
    read -n1 -r REPLY
    echo
    [[ $REPLY =~ ^[Ss]$ ]] && reboot && break
    [[ $REPLY =~ ^[Nn]$ ]] && break
    echo -e "\033[1;31mOpción inválida.\033[0m"
done

# Limpieza
rm -rf $HOME/Plus
history -c
