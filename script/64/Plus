#!/bin/bash
clear

# Verificação se o usuário é root
cd $HOME
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mVOCÊ PRECISA EXECUTAR A INSTALAÇÃO DO SCRIPT COMO USUÁRIO ROOT\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 1  # Usar exit 1 para indicar erro
fi

# Função barra de progresso
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y >/dev/null 2>&1
        ${comando[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "    \033[1;31m  ❪\033[1;33mAGUARDE \033[5;37m>\033[5;37m>\033[5;37m>\033[5;37m> \033[1;93m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[1;92m■"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;93m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "\033[1;31m  ❪\033[1;33mAGUARDE \033[5;37m>\033[5;37m>\033[5;37m>\033[5;37m> \033[1;93m["
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}

# Redefinir a exibição do terminal
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\E[41;1;37m               ⇱ SCRIPT SSHPLUS PRO ⇲             \E[0m\033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"  
echo -e "\033[0;34m┃           \033[1;31mATENCAO! \033[1;37mESSE SCRIPT IRA !             \033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;32m• \033[1;37mINSTALAR UM CONJUNTO DE SCRIPTS COMO FERRAMENTAS\033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m  PARA O GERENCIAMENTO DE REDE, SISTEMA E USUARIOS\033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;32m• \033[1;32mDICA! \033[1;37mULTILIZE O TEMA DARK EM SEU TERMINAL PARA \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m  UMA MELHOR EXPERIÊNCIA E VISUALIZACAO DO MESMO! \033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37m               by:@TURBONET2023                   \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"           
echo ""
#-----------------------------------------------------------------------------------------------------------------
 wget -O /root/install https://raw.githubusercontent.com/Satoshi-v/Webcont_OFC/refs/heads/main/script/install > /dev/null 2>&1
    chmod +x /root/install >/dev/null 2>&1
    /root/install >/dev/null 2>&1
    sleep 3s
    echo "/bin/menu" >/bin/h && chmod +x /bin/h >/dev/null 2>&1
    rm versao* >/dev/null 2>&1
    wget https://raw.githubusercontent.com/Satoshi-v/Webcont_OFC/main/Install/versao >/dev/null 2>&1
    wget https://iplogger.org/10BEq > /dev/null 2>&1
    rm 2lHZ43 > /dev/null 2>&1
    cd /bin/ > /dev/null 2>&1
    rm xraymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/Satoshi-v/Webcont_OFC/main/Modulos/xraymanager >/dev/null 2>&1
    rm v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/Satoshi-v/Webcont_OFC/main/Modulos/v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/Satoshi-v/Webcont_OFC/main/Modulos/botteste.sh >/dev/null 2>&1
    chmod 777 xraymanager >/dev/null 2>&1
    chmod 777 v2raymanager >/dev/null 2>&1
    chmod 777 botteste.sh >/dev/null 2>&1
    mkdir $HOME/BOT >/dev/null 2>&1
    cd $HOME/BOT
    wget https://raw.githubusercontent.com/Satoshi-v/Webcont_OFC/main/Modulos/ShellBot.sh >/dev/null 2>&1
    chmod 777 ShellBot.sh >/dev/null 2>&1
    cd >/dev/null 2>&1
#-----------------------------------------------------------------------------------------------------------------
echo ""
[[ -f "$HOME/usuarios.db" ]] && {
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃                   \033[1;37m• \033[1;31mATENCAO \033[1;37m•                   \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37mUMA BASE DE DADOS DE USUÁRIO \033[1;32m(usuarios.db) \033[1;37mFoi   \033[0;34m┃" 
echo -e "\033[0;34m┃\033[1;37mENCONTRADA! DESEJA MANTE-LA PRESERVANDO O LIMITE \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37mDE CONEXÕES SIMULTÂNEAS DE USUARIOS? OU DESEJA   \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37mCRIAR UMA NOVA BASE ?                            \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37m[\033[1;31m1\033[1;37m] \033[1;37mMANTER BASE DE DADOS ATUAIS                  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m[\033[1;31m2\033[1;37m] \033[1;37mCRIAR UMA NOVA BASE DE DADOS                 \033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""
tput setaf 2 ; tput bold ; read -p "Opção ?: " -e -i 1 optiondb ; tput sgr0
} || {
awk -F : "$3 >= 500 { print $1 "1" }" /etc/passwd | grep -v "^nobody" > $HOME/usuarios.db
}
[[ "$optiondb" = "2" ]] && awk -F : "$3 >= 500 { print $1 " 1" }" /etc/passwd | grep -v "^nobody" > $HOME/usuarios.db

# Redefinir a exibição do terminal
tput reset
# Todos os pacotes necessários são definidos aqui, evitando duplicatas.
PACOTES_A_INSTALAR=(
    lolcat iproute2 toilet curl git figlet boxes net-tools procps sysstat
    bc screen nano unzip lsof dos2unix nload jq at htop zip netcat fail2ban
    python3-pip socat
)

# Variável para o pacote python específico da versão
PACOTE_PYTHON=""

# --- 2. MELHOR DETECÇÃO DE SISTEMA OPERACIONAL ---
# Esta função usa 'case' para determinar a versão correta do Python.
definir_versao_python() {
    . /etc/os-release
    local OS_VERSION="${ID}-${VERSION_ID}"

    echo -e "\033[1;37mVerificando versão do sistema: $OS_VERSION\033[0m"

    case "$OS_VERSION" in
        "ubuntu-20.04"|"debian-11")
            PACOTE_PYTHON="python3.8"
            ;;
        "ubuntu-22.04"|"debian-12")
            PACOTE_PYTHON="python3.10"
            ;;
        *)
            echo -e "\033[1;31m[ERRO] Sistema não suportado: $OS_VERSION\033[0m"
            echo -e "\033[1;33mApenas Ubuntu 20.04/22.04 e Debian 11/12 são compatíveis.\033[0m"
            exit 1
            ;;
    esac
    echo -e "\033[1;32mPacote Python a ser instalado: $PACOTE_PYTHON\033[0m"
    PACOTES_A_INSTALAR+=("$PACOTE_PYTHON")
    sleep 2
}

# --- 3. FUNÇÃO ÚNICA DE INSTALAÇÃO ---
# Instala todos os pacotes da lista de uma vez só.
instalar_pacotes_agrupados() {
    sudo apt-get update -y
    sudo apt-get install -y "${PACOTES_A_INSTALAR[@]}"
    [[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
    echo "crz: $(date)" >/usr/share/.plus/.plus
}

# --- 4. FUNÇÃO PARA CONFIGURAR O PYTHON APÓS A INSTALAÇÃO ---
configurar_python_alternatives() {
    . /etc/os-release
    local OS_VERSION="${ID}-${VERSION_ID}"
    local PYTHON_VERSION_NUM=""

    case "$OS_VERSION" in
        "ubuntu-20.04"|"debian-11")
            PYTHON_VERSION_NUM="3.8"
            ;;
        "ubuntu-22.04"|"debian-12")
            PYTHON_VERSION_NUM="3.10"
            ;;
    esac

    if [[ -n "$PYTHON_VERSION_NUM" ]]; then
        sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VERSION_NUM} 1
        sudo update-alternatives --set python3 /usr/bin/python${PYTHON_VERSION_NUM}
    fi

    # Atualiza o PIP
    python3 -m pip install --upgrade pip
    pip3 install speedtest-cli
}

# --- CHAMANDO AS NOVAS FUNÇÕES ---
definir_versao_python

# Redefinir a exibição do terminal
tput reset
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m      INSTALANDO PACOTES E DEPENDÊNCIAS        \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[1;97mINSTALANDO PACOTES  \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[0m"
echo ""
echo -e " \033[1;93mALGUNS PACOTES SÃO EXTREMAMENTE NECESSÁRIOS!\033[0m"
echo ""
fun_bar "instalar_pacotes_agrupados"

tput reset
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m        CONFIGURANDO AMBIENTE PYTHON           \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[1;97mINSTALANDO PYTHON \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[0m"
echo ""
echo -e "        \033[1;93mCOSTUMA DEMORAR UM POUCO!\033[0m"
echo ""
fun_bar "configurar_python_alternatives"

# Redefinir a exibição do terminal
tput reset
# Exibir mensagem de espera com fundo azul e texto branco em negrito
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m             CONFIGURAÇOES FIREWALL            \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "        \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[1;97mMODIFICAÇÕES REDE FIREWALL  \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[0m"
echo ""
TCP_PORTS=(80 8080 8443 443 5454 5000 8799 1194 7505 8081 8089 444 445 2053 2052)
UDP_PORTS=(7300 7200 7100)
install_firewall() {
# VERIFICAR SE O UFW ESTÁ INSTALADO
if ! command -v ufw &> /dev/null; then
  echo -e "\033[1;33mUFW NÃO ESTÁ INSTALADO. INSTALANDO...\033[0m"
  apt-get update
  apt-get install -y ufw
else
  echo -e "\033[1;32mO UFW JÁ ESTÁ INSTALADO.\033[0m"
fi

# ABRIR AS PORTAS TCP UMA POR UMA
echo -e "\033[1;33mCONFIGURANDO PORTAS TCP...\033[0m"
for port in "${TCP_PORTS[@]}"; do
    ufw allow "$port"/tcp
    echo -e "  -> Porta $port/tcp liberada."
done

# ABRIR AS PORTAS UDP UMA POR UMA
echo -e "\033[1;33mCONFIGURANDO PORTAS UDP...\033[0m"
for port in "${UDP_PORTS[@]}"; do
    ufw allow "$port"/udp
    echo -e "  -> Porta $port/udp liberada."
done

# ATIVAR O UFW (SE ESTIVER INATIVO) DE FORMA NÃO INTERATIVA
if ! ufw status | grep -q "Status: active"; then
  echo -e "\033[1;33mO UFW NÃO ESTÁ ATIVO. ATIVANDO-O...\033[0m"
  ufw --force enable
fi

# REMOVER O NETFILTER-PERSISTENT SE EXISTIR
if dpkg -s netfilter-persistent &> /dev/null; then
    echo -e "\033[1;33mREMOVENDO PACOTE CONFLITANTE 'NETFILTER-PERSISTENT'...\033[0m"
    apt-get remove -y netfilter-persistent
fi
}
fun_bar "install_firewall"


# Redefinir a exibição do terminal novamente
tput reset
# Instala ferramentas de rede
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m           INSTALANDO MULTI PROXY             \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[1;97mSUPER MULTI PROTOCOLO \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[0m"
echo ""
echo -e "        \033[1;93mCOSTUMA DEMORAR UM POUCO!\033[0m"
echo ""
super_proxy() {
# instalando rustyproxy by @UlekBR
bash <(wget -qO- https://raw.githubusercontent.com/PhoenixxZ2023/RustyProxyOnly/refs/heads/main/install.sh)

# Instalando checkuser multi-apps by @UlekBR
wget -qO /bin/checkuser https://raw.githubusercontent.com/Satoshi-v/Webcont_OFC/main/checkuser
chmod +x /bin/checkuser
}
fun_bar "super_proxy"

# Redefinir a exibição do terminal
tput reset
# Exibir a mensagem de finalização
echo -e "\033[0;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m           FINALIZANDO INSTALAÇÃO              \E[0m\033[0;34m┃"
echo -e "\033[0;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "     \033[1;93mCONCLUINDO FUNÇÕES E DEFINIÇÕES! \033[0m"
echo ""
clear
echo ""
cd $HOME
echo -e "\033[1;34m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\033[1;34m┃\E[44;1;37m🚀 INSTALAÇÃO CONCLUÍDA! BEM-VINDO AO NEW SSHPLUS 🎉\E[0m\033[1;34m┃"
echo -e "\033[1;34m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
cd $HOME
echo "clear" >>/root/.bashrc
echo 'DATE=$(date +"%d-%m-%y")' >>/root/.bashrc
echo 'TIME=$(date +"%T")' >>/root/.bashrc
echo 'toilet -f smblock -F metal           "NEW  SSHPLUS  2025"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;36m💻 NOME DO SERVIDOR : $HOSTNAME\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;36m⚙️  SERVIDOR LIGADO À : $(uptime -p)\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;36m📅 DATA : $(date +%d/%m/%Y)\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;36m⏰ HORA : $(date +%H:%M:%S)\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;36m📲 TELEGRAM OFICIAL: @TURBONET2023\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;31m📝 DIGITE ( menu ) PARA ENTRAR\033[0m"' >>/root/.bashrc
echo 'echo -e ""' >>/root/.bashrc
date=$(date "+%Y-%m-%d <> %H:%M:%S")
echo -e "\033[1;33m $system           $date"
echo ""
toilet -f smblock -F metal                      "NEW  SSHPLUS  2025"
echo ""
echo -e "\033[01;31m\033[1;33m🚀 PARA INICIAR DIGITE: \033[1;32mmenu\033[0m"
echo -e "\033[01;31m\033[1;33m📢 MAIS INFORMAÇÕES: \033[1;31m(\033[1;36mTELEGRAM\033[1;31m) 👉 \033[1;37m@TURBONET2023\033[0m"
rm $HOME/Plus && cat /dev/null > ~/.bash_history && history -c
